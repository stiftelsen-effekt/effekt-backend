steps:
  - name: "gcr.io/cloud-builders/npm"
    args: ["install"]
  - name: "gcr.io/cloud-builders/npm"
    args: ["run", "test"]
  - name: "gcr.io/cloud-builders/npm"
    args: ["run", "build"]
  - name: "gcr.io/cloud-builders/docker"
    args: ["build", "-t", "gcr.io/$PROJECT_ID/effektapi-stage:latest", "."]
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/$PROJECT_ID/effektapi-stage:latest"]

  #Install cloud sql proxy for running migrations
  - id: proxy-install
    name: gcr.io/cloud-builders/wget
    entrypoint: sh
    args:
      - "-c"
      - "wget https://storage.googleapis.com/cloudsql-proxy/v1.20.1/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy && chmod +x cloud_sql_proxy"
    waitFor: ["-"]
  #Install dbmate for running migrations
  - id: dbmate-install
    name: gcr.io/cloud-builders/wget
    entrypoint: sh
    args:
      - "-c"
      - "wget https://github.com/amacneil/dbmate/releases/latest/download/dbmate-linux-amd64 -O dbmate && chmod +x dbmate"
    waitFor: ["-"]
  #Run migrations
  - id: migrate
    name: gcr.io/cloud-builders/gcloud
    entrypoint: sh
    args:
      - "-c"
      - |
        apt-get -y update && \
        apt-get -y install mysql-client && \
        (./cloud_sql_proxy -dir=/workspace -instances=$_CLOUD_SQL_CONNECTION & sleep 10) && \
        export DATABASE_URL="mysql://$_DB_USER:$_DB_PASSWORD@localhost:3306/$_DB_NAME" && \
        ./dbmate up
    timeout: "1200s"
    waitFor: ["proxy-install", "dbmate-install"]

  #Migrations are applied, deploy the newest version of the API
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "run",
        "deploy",
        "effektapi-stage",
        "--image",
        "gcr.io/$PROJECT_ID/effektapi-stage:latest",
        "--region",
        "europe-north1",
        "--platform",
        "managed",
        "--allow-unauthenticated",
      ]
images: ["gcr.io/$PROJECT_ID/effektapi-stage:latest"]
