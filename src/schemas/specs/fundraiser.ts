/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


/** Type helpers */
type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };
type XOR<T, U> = (T | U) extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;
type OneOf<T extends any[]> = T extends [infer Only] ? Only : T extends [infer A, infer B, ...infer Rest] ? OneOf<[XOR<A, B>, ...Rest]> : never;

export type paths = Record<string, never>;

export interface components {
  schemas: {
    /**
     * @example {
     *   "id": 1688420612476723,
     *   "permalink": "https://www.facebook.com/1688420612476723",
     *   "title": "New boiler for the hotel",
     *   "description": "We need to raise money to buy a new boiler for the hotel",
     *   "goal": 100000,
     *   "end": "1921-07-04T23:00:00.000Z"
     * }
     */
    Fundraiser: {
      /** @description The Auto-generated id for a fundraiser, from facebook */
      id: number;
      /** @description The permalink for the fundraiser, from facebook */
      permalink: string;
      /** @description The title of the fundraiser */
      title?: string;
      /** @description A description used for the fundraiser */
      description?: string;
      /** @description The goal amount of the fundraiser in NOK */
      goal?: number;
      /**
       * Format: date-time 
       * @description The end time of the fundraiser in question
       */
      end?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export type operations = Record<string, never>;
